-- Сначала создаем таблицы без внешних ключей
CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

-- Затем таблицы с зависимостями
CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title              VARCHAR(120)                NOT NULL,
    annotation         TEXT                        NOT NULL,
    description        TEXT                        NOT NULL,
    category_id        BIGINT                      NOT NULL,
    initiator_id       BIGINT                      NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    location_id        BIGINT,
    paid               BOOLEAN                     NOT NULL DEFAULT FALSE,
    participant_limit  INTEGER                     NOT NULL DEFAULT 0,
    request_moderation BOOLEAN                     NOT NULL DEFAULT TRUE,
    confirmed_requests INTEGER                              DEFAULT 0,
    views              BIGINT                               DEFAULT 0,
    state              VARCHAR(20)                 NOT NULL,
    comments           BIGINT                               DEFAULT 0
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id     BIGINT                      NOT NULL,
    requester_id BIGINT                      NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status       VARCHAR(20)                 NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(50) NOT NULL,
    pinned BOOLEAN     NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author   BIGINT                      NOT NULL,
    event_id  BIGINT                      NOT NULL,
    text      VARCHAR(7000)               NOT NULL,
    moderated BOOLEAN,
    created   timestamp WITHOUT TIME ZONE NOT NULL
);

-- Добавляем внешние ключи после создания всех таблиц
ALTER TABLE comments
    ADD CONSTRAINT fk_comments_event FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE comments
    ADD CONSTRAINT fk_comments_user FOREIGN KEY (author) REFERENCES users (id);
ALTER TABLE events
    ADD CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES categories (id);
ALTER TABLE events
    ADD CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (id);
ALTER TABLE requests
    ADD CONSTRAINT fk_requests_events FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE requests
    ADD CONSTRAINT fk_requests_users FOREIGN KEY (requester_id) REFERENCES users (id);
ALTER TABLE compilation_events
    ADD CONSTRAINT fk_ce_compilations FOREIGN KEY (compilation_id) REFERENCES compilations (id);
ALTER TABLE compilation_events
    ADD CONSTRAINT fk_ce_events FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE events
    ADD CONSTRAINT fk_event_location
        FOREIGN KEY (location_id) REFERENCES locations (id);